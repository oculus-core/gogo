version: 2
project_name: gogo
before:
  hooks:
    - go mod tidy
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64
    main: .
    ldflags:
      - -s -w
      - -X github.com/oculus-core/gogo/cmd/gogo.Version={{.Version}}
      - -X github.com/oculus-core/gogo/cmd/gogo.Commit={{.Commit}}
      - -X github.com/oculus-core/gogo/cmd/gogo.BuildDate={{.Date}}
archives:
  - id: gogo
    name_template: >-
      {{ .ProjectName }}_{{ .Version }}_ {{- if eq .Os "darwin" }}Darwin{{ else if eq .Os "linux" }}Linux{{ else if eq .Os "windows" }}Windows{{ else }}{{ .Os }}{{ end }}_ {{- if eq .Arch "amd64" }}x86_64{{ else if eq .Arch "arm64" }}arm64{{ else }}{{ .Arch }}{{ end }}
    files:
      - LICENSE
      - README.md
checksum:
  name_template: 'checksums.txt'
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - Merge pull request
      - Merge branch
release:
  github:
    owner: oculus-core
    name: gogo
  draft: false
  prerelease: auto
# Homebrew tap configurations
brews:
  # Latest version formula
  - name: gogo
    repository:
      owner: oculus-core
      name: homebrew-gogo
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    homepage: "https://github.com/oculus-core/gogo"
    description: "CLI tool for generating Go projects with best practices"
    license: "MIT"
    test: |
      system bin/"gogo", "version"
    install: |
      bin.install "gogo"
    commit_author:
      name: github-actions[bot]
      email: github-actions[bot]@users.noreply.github.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
  # Versioned formula for 0.1.x
  - name: gogo@0.1
    repository:
      owner: oculus-core
      name: homebrew-gogo
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    homepage: "https://github.com/oculus-core/gogo"
    description: "CLI tool for generating Go projects with best practices (v0.1 series)"
    license: "MIT"
    test: |
      system bin/"gogo", "version"
    install: |
      bin.install "gogo"
    commit_author:
      name: github-actions[bot]
      email: github-actions[bot]@users.noreply.github.com
    # Only update this formula when the version starts with 0.1
    custom_require: "Custom/gogo_versioning"
    custom_block: |
      include GogoVersioning
      depends_on :macos => :catalina
    url_template: "https://github.com/oculus-core/gogo/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    # Only update this formula for 0.1.x versions - using string prefix check instead of semver function
    skip_upload: '{{ if ne (slice .Version 0 3) "0.1" }}true{{ end }}'
